@using Newtonsoft.Json
@model NamoriTravel.Models.HotelResponse

@{
    Layout = "~/Views/Shared/_Layout_Client.cshtml";
     int pagesPerGroup = 10; // Number of pages per group
    int currentGroup = (@Model.CurrentPage - 1) / pagesPerGroup;
    int totalGroups = (@Model.TotalPages + pagesPerGroup - 1) / pagesPerGroup; // Calculate total groups

}
<style>
    .button-grid {
        display: flex !important;
        align-items: center !important; /* Vertically center the items */
        flex-wrap: nowrap !important; /* Prevent items from wrapping */
        gap: 20px !important; /* Space between items */
    }

    .searchMenu-loc,
    .searchMenu-date,
    .searchMenu-guests {
        flex: 1 !important; /* Allow items to grow equally */
    }

    .mainSearch__submit {
        flex-shrink: 0 !important; /* Prevent the button from shrinking */
    }

    .mainSearch.-w-900 {
        width: 1000px !important;
    }
</style>

<main>
    <div class="header-margin"></div>
<section class="pt-40 pb-40 bg-blue-2">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="text-center">
                    <h1 class="text-30 fw-600">Find Your Dream Luxury Hotel</h1>
                </div>

                <div class="mainSearch bg-white px-10 py-10 lg:px-20 lg:pt-5 lg:pb-20 mt-30">
                    <div class="button-grid items-center">

                        <div class="searchMenu-loc px-30 lg:py-20 lg:px-0 js-form-dd js-liverSearch">

                                <div data-x-dd-click="searchMenu-country">
                                <h4 class="text-15 fw-500 ls-2 lh-16">Country</h4>
                                <div class="text-15 text-light-1 ls-2 lh-16">
                                    <input autocomplete="off" type="search" placeholder="Where are you going?" class="js-search js-dd-focus" />
                                </div>
                            </div>
                                <div class="searchMenu-loc__field shadow-2 js-popup-window" data-x-dd="searchMenu-country" data-x-dd-toggle="-is-active">
                                <div class="bg-white px-30 py-30 sm:px-0 sm:py-15 rounded-4">
                                    <div class="y-gap-5 js-results">
                                            <div id="countryList"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                            <div class="searchMenu-loc px-30 lg:py-20 lg:px-0 js-form-dd js-liverSearchCity">

                                <div data-x-dd-click="searchMenu-city">
                                    <h4 class="text-15 fw-500 ls-2 lh-16">City</h4>
                                    <div class="text-15 text-light-1 ls-2 lh-16">
                                        <input autocomplete="off" type="search" placeholder="Where are you going?" class="js-search citysearch js-dd-focus " />
                                    </div>
                                </div>
                                <div class="searchMenu-loc__field shadow-2 js-popup-window" data-x-dd="searchMenu-city" data-x-dd-toggle="-is-active">
                                    <div class="bg-white px-30 py-30 sm:px-0 sm:py-15 rounded-4">
                                        <div class="y-gap-5 js-results">
                                            <div id="city-list">
                                        </div>
                                    </div>
                                </div>
                            </div>
                          </div>

                        <div class="searchMenu-date px-30 lg:py-20 lg:px-0 js-form-dd js-calendar js-calendar-el">

                            <div data-x-dd-click="searchMenu-date">
                                <h4 class="text-15 fw-500 ls-2 lh-16">Check in - Check out</h4>

                                <div class="capitalize text-15 text-light-1 ls-2 lh-16">
                                    <span class="js-first-date">Wed 2 Mar</span>
                                    -
                                    <span class="js-last-date">Fri 11 Apr</span>
                                </div>
                            </div>


                            <div class="searchMenu-date__field shadow-2" data-x-dd="searchMenu-date" data-x-dd-toggle="-is-active">
                                <div class="bg-white px-30 py-30 rounded-4">
                                    <div class="elCalendar js-calendar-el-calendar"></div>
                                </div>
                            </div>
                        </div>


                        <div class="searchMenu-guests px-30 lg:py-20 lg:px-0 js-form-dd js-form-counters">

                            <div data-x-dd-click="searchMenu-guests">
                                <h4 class="text-15 fw-500 ls-2 lh-16">Guest</h4>

                                <div class="text-15 text-light-1 ls-2 lh-16">
                                    <span class="js-count-adult">2</span> adults
                                    -
                                    <span class="js-count-child">1</span> childeren
                                    -
                                    <span class="js-count-room">1</span> room
                                </div>
                            </div>


                            <div class="searchMenu-guests__field shadow-2" data-x-dd="searchMenu-guests" data-x-dd-toggle="-is-active">
                                <div class="bg-white px-30 py-30 rounded-4">
                                    <div class="row y-gap-10 justify-between items-center">
                                        <div class="col-auto">
                                            <div class="text-15 fw-500">Adults</div>
                                        </div>

                                        <div class="col-auto">
                                            <div class="d-flex items-center js-counter" data-value-change=".js-count-adult">
                                                <button class="button -outline-blue-1 text-blue-1 size-38 rounded-4 js-down">
                                                    <i class="icon-minus text-12"></i>
                                                </button>

                                                <div class="flex-center size-20 ml-15 mr-15">
                                                    <div class="text-15 js-count">2</div>
                                                </div>

                                                <button class="button -outline-blue-1 text-blue-1 size-38 rounded-4 js-up">
                                                    <i class="icon-plus text-12"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="border-top-light mt-24 mb-24"></div>

                                    <div class="row y-gap-10 justify-between items-center">
                                        <div class="col-auto">
                                            <div class="text-15 lh-12 fw-500">Children</div>
                                            <div class="text-14 lh-12 text-light-1 mt-5">Ages 0 - 17</div>
                                        </div>

                                        <div class="col-auto">
                                            <div class="d-flex items-center js-counter" data-value-change=".js-count-child">
                                                <button class="button -outline-blue-1 text-blue-1 size-38 rounded-4 js-down">
                                                    <i class="icon-minus text-12"></i>
                                                </button>

                                                <div class="flex-center size-20 ml-15 mr-15">
                                                    <div class="text-15 js-count">1</div>
                                                </div>

                                                <button class="button -outline-blue-1 text-blue-1 size-38 rounded-4 js-up">
                                                    <i class="icon-plus text-12"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="border-top-light mt-24 mb-24"></div>

                                    <div class="row y-gap-10 justify-between items-center">
                                        <div class="col-auto">
                                            <div class="text-15 fw-500">Rooms</div>
                                        </div>

                                        <div class="col-auto">
                                            <div class="d-flex items-center js-counter" data-value-change=".js-count-room">
                                                <button class="button -outline-blue-1 text-blue-1 size-38 rounded-4 js-down">
                                                    <i class="icon-minus text-12"></i>
                                                </button>

                                                <div class="flex-center size-20 ml-15 mr-15">
                                                    <div class="text-15 js-count">1</div>
                                                </div>

                                                <button class="button -outline-blue-1 text-blue-1 size-38 rounded-4 js-up">
                                                    <i class="icon-plus text-12"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="button-item">
                            <button class="mainSearch__submit button -dark-1 py-15 px-40 col-12 rounded-4 bg-blue-1 text-white">
                                <i class="icon-search text-20 mr-10"></i>
                                Search
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="layout-pt-md layout-pb-lg">
    <div class="container">
        <div class="row y-gap-30">
            <div class="col-xl-3 col-lg-4">
                <aside class="sidebar y-gap-40">
                    <div class="sidebar__item">
                        <h5 class="text-18 fw-500 mb-10">Popular Filters</h5>
                        <div class="sidebar-checkbox">
                              @if(@Model.Amenitiesdto is not null && @Model.Amenitiesdto.Any())
                                {
                                @foreach(var item in @Model.Amenitiesdto){
                               <div class="row y-gap-10 items-center justify-between">
                                <div class="col-auto">
                                    <div class="d-flex items-center">
                                        <div class="form-checkbox">
                                            <input type="checkbox">
                                            <div class="form-checkbox__mark">
                                                <div class="form-checkbox__icon icon-check"></div>
                                            </div>
                                        </div>
                                        <div class="text-15 ml-10">@item.Description</div>
                                    </div>
                                </div>

                                <div class="col-auto">
                                    <div class="text-15 text-light-1">@item.Value</div>
                                </div>
                            </div>
                                }
                                }
                                else{

                            <div class="row y-gap-10 items-center justify-between">
                                <div class="col-auto">
                                    <div class="d-flex items-center">
                                        <div class="form-checkbox">
                                            <input type="checkbox">
                                            <div class="form-checkbox__mark">
                                                <div class="form-checkbox__icon icon-check"></div>
                                            </div>
                                        </div>
                                        <div class="text-15 ml-10">Breakfast Included</div>
                                    </div>
                                </div>

                                <div class="col-auto">
                                    <div class="text-15 text-light-1">92</div>
                                </div>
                            </div>

                           }

                           
                           
                         

                        </div>
                    </div>
                </aside>
            </div>

            <div class="col-xl-9 col-lg-8">
                <div class="row y-gap-10 items-center justify-between">
                    <div class="col-auto">
                        <div class="text-18"><span class="fw-500"> (@Model.Count) Hotels</span> in @Model.Hotels.Select(x=>x.CityName).FirstOrDefault()</div>
                    </div>
                </div>

                <div class="filterPopup bg-white" data-x="filterPopup" data-x-toggle="-is-active">
                    <aside class="sidebar -mobile-filter">
                        <div class="sidebar__item">
                            <h5 class="text-18 fw-500 mb-10">Amenities</h5>
                            <div class="sidebar-checkbox">
                                <div class="row items-center justify-between">
                                    <div class="col-auto">

                                        <div class="d-flex items-center">
                                            <div class="form-checkbox ">
                                                <input type="checkbox" name="name">
                                                <div class="form-checkbox__mark">
                                                    <div class="form-checkbox__icon icon-check"></div>
                                                </div>
                                            </div>

                                            <div class="text-15 ml-10">WiFi Included </div>

                                        </div>

                                    </div>

                                    <div class="col-auto">
                                        <div class="text-15 text-light-1">45</div>
                                    </div>
                                </div>
                                @if(@Model.Amenitiesdto is not null && @Model.Amenitiesdto.Any())
                                {
                                @foreach(var item in @Model.Amenitiesdto){
                                <div class="row items-center justify-between">
                                    <div class="col-auto">

                                        <div class="d-flex items-center">
                                            <div class="form-checkbox ">
                                                <input type="checkbox" name="name">
                                                <div class="form-checkbox__mark">
                                                    <div class="form-checkbox__icon icon-check"></div>
                                                </div>
                                            </div>

                                            <div class="text-15 ml-10">@item.Description</div>

                                        </div>

                                    </div>

                                    <div class="col-auto">
                                        <div class="text-15 text-light-1">@item.Value</div>
                                    </div>
                                </div>
                                }
                                }

                            </div>
                        </div>
                    </aside>
                </div>

                <div class="border-top-light mt-30 mb-30"></div>

                <div class="row y-gap-30">

                    @* //-------------------Dynamic Hotel List---------------------// *@
 @if (Model.Hotels != null && Model.Hotels.Count > 0)
{
    @foreach (var item in Model.Hotels)
    {
        <div class="col-lg-4 col-sm-6">
            <a asp-controller="NamoriTravels" 
               asp-action="GetRooms" 
               asp-route-HotelId="@item.HotelId" 
               class="hotelsCard -type-1">
                <div class="hotelsCard__image">
                    <div class="cardImage ratio ratio-1:1 rounded-4">
                        <div class="cardImage__content">
                            <div class="cardImage-slider rounded-4 overflow-hidden js-cardImage-slider">
                                <div class="swiper-wrapper">
                                    @if (item.HotelImages.Any())
                                    {
                                        @foreach (var image in item.HotelImages)
                                        {
                                            @if (image.Url.ToString().Contains("dotwconnect"))
                                            {
                                                <div class="swiper-slide">
                                                    <img class="col-12" src="@Html.Raw(image.Url)" alt="@Html.Raw(image.Category)" />
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="swiper-slide">
                                                    <img class="col-12" src="~/dashboard/img/lists/hotel/1/2.png" alt="image" />
                                                </div>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <div class="swiper-slide">
                                            <img class="col-12" src="~/dashboard/img/lists/hotel/1/2.png" alt="image" />
                                        </div>
                                    }
                                </div>

                                <div class="cardImage-slider__pagination js-pagination"></div>

                                <div class="cardImage-slider__nav -prev">
                                    <button class="button -blue-1 bg-white size-30 rounded-full shadow-2 js-prev">
                                        <i class="icon-chevron-left text-10"></i>
                                    </button>
                                </div>

                                <div class="cardImage-slider__nav -next">
                                    <button class="button -blue-1 bg-white size-30 rounded-full shadow-2 js-next">
                                        <i class="icon-chevron-right text-10"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="hotelsCard__content mt-10">
                    <h4 class="hotelsCard__title text-dark-1 text-18 lh-16 fw-500">
                        <span>@item.HotelName, @item.FullAddress?.HotelCity</span>
                    </h4>

                    <p class="text-light-1 lh-14 text-14 mt-5">@item.FullAddress?.HotelStreetAddress</p>

                    <div class="d-flex items-center mt-20">
                        <div class="flex-center bg-blue-1 rounded-4 size-30 text-12 fw-600 text-white">
                            @item.Rooms.Select(x => x.Runno).Count()
                        </div>
                        <div class="text-14 text-dark-1 fw-500 ml-10">Rooms</div>
                    </div>

                    <div class="mt-5">
                        <div class="fw-500">
                            Starting from <span class="text-blue-1">@Model.CurrencyShort</span>
                        </div>
                    </div>
                </div>
            </a>
        </div>
    }
}


                    @* //-------------------------Pagination-----------------------// *@
            <div class="border-top-light mt-30 pt-30">
    <div class="row x-gap-10 y-gap-20 justify-center md:justify-center">

        @* Previous Group Button *@
        @if (currentGroup > 0)
        {
            <div class="col-auto md:order-1">
                <button class="button -blue-1 size-40 rounded-full border-light">
                    <a href="@Url.Action("HotelDetails", new { 
            DTO = JsonConvert.SerializeObject(Model.searchParam.CloneWithPage(((currentGroup + 1) * pagesPerGroup + 1).ToString()))
                    })" 
                    class="icon-chevron-left text-12">
                    </a>
                </button>
            </div>
        }

        @* Page Numbers for the Current Group *@
        <div class="col-md-auto md:order-3">
            <div class="row x-gap-20 y-gap-20 items-center md:d-none">
                @{
                    int startPage = currentGroup * pagesPerGroup + 1;
                    int endPage = Math.Min(startPage + pagesPerGroup - 1, Model.TotalPages);

                    for (int i = startPage; i <= endPage; i++)
                    {
                        <div class="col-auto">
                            <a href="@Url.Action("HotelDetails", new { 
                   DTO = JsonConvert.SerializeObject(Model.searchParam.CloneWithPage((i.ToString()).ToString()))
                            })"
                            class="size-40 flex-center rounded-full @(i == Model.CurrentPage ? "bg-dark-1 text-white" : "bg-light-2")">
                                @i
                            </a>
                        </div>
                    }
                }
            </div>
        </div>

        @* Next Group Button *@
        @if (currentGroup < totalGroups - 1)
        {
            <div class="col-auto md:order-2">
                <button class="button -blue-1 size-40 rounded-full border-light">
                    <a href="@Url.Action("HotelDetails", new { 
                                                    DTO = JsonConvert.SerializeObject(Model.searchParam.CloneWithPage(
                                                    ((currentGroup + 1) * pagesPerGroup + 1).ToString()))

                    })" 
                    class="icon-chevron-right text-12">
                    </a>
                </button>
            </div>
        }

    </div>
</div>


           @* //--------------------// *@

            </div>
        </div>
    </div>
</section>

    </main>


 @section Scripts{
 <script>

    var page="1";
    var ratebasis="-1";
    let elements = document.querySelectorAll('.col-auto');

    elements.forEach((element) => {
        element.addEventListener('click', function () {
            Page = this.querySelector('.size-40').innerText;
           // searchHotels();
        });
    });

var CityCode="";

    $('.citysearch').on('input', function () {
        var searchTerm = $(this).val().toLowerCase();
        var filteredCities = cities.filter(city => city.name.toLowerCase().includes(searchTerm));
        populateCityList(filteredCities);
    });

    $(document).on('click', '.getcity', function () {
        var selectedCityCode = $(this).find('.citycode').text();
        CityCode = selectedCityCode.split(',')[0];
        var selectedCityName = $(this).find('.city').text();
        $('.citysearch').val(selectedCityCode); // Set the input field with the city name

    });

    document.querySelector('.mainSearch__submit').addEventListener('click', function (e) {
        e.preventDefault(); // Prevent default form submission
        searchHotels(); // Call the searchHotels function
    });

    function searchHotels() {
    
    let currencyMainTitle = document.querySelector('.js-currencyMenu-mainTitle');
    // Get the data-value attribute
    let currencyValue = currencyMainTitle.getAttribute('data-value');
    let checkInDate = document.querySelector('.js-first-date').textContent;
    let checkOutDate = document.querySelector('.js-last-date').textContent;
    let adults = document.querySelector('.js-count-adult').textContent;
    let children = document.querySelector('.js-count-child').textContent;
    let rooms = document.querySelector('.js-count-room').textContent;

    // Prepare API parameters
    let searchParams = {
        City: CityCode,
        Currency:currencyValue,
        Ratebasis: "-1",
        FromDate: checkInDate,
        ToDate: checkOutDate,
        Adults: adults,
        Children: children,
        Rooms: rooms,
        Page:page,
        PageSize:"10"
    };

    console.log("Search Parameters:", searchParams);
    var basePath = window.location.origin;
    $.ajax({
            type: 'GET',
            url: basePath + '/NamoriTravels/HotelDetails',
            data: {DTO:JSON.stringify(searchParams)},
            success: function (response) {
                //if (response) {
            window.location.href ='/NamoriTravels/HotelDetails?DTO='+JSON.stringify(searchParams)+''; // Redirect the user to the new page
        //} else {
            // Handle other success scenarios
           // Alerts.showSuccessMessage("");
        //}
            // },
            // error: function (xhr, status, error) {
            //       Alerts.showErrorMessage("");
            //     console.error("Error: ", status, error);
            }
        });
}

document.addEventListener("DOMContentLoaded", () => {
    const sliders = document.querySelectorAll('.js-cardImage-slider');
    sliders.forEach(slider => {
        new Swiper(slider, {
            loop: true,
            pagination: {
                el: slider.querySelector('.js-pagination'),
                clickable: true,
            },
            navigation: {
                nextEl: slider.querySelector('.js-next'),
                prevEl: slider.querySelector('.js-prev'),
            },
        });
    });
});

    </script>
} 
