@using NamoriTravel.Authorize
@model IEnumerable<NamoriTravel.Models.PageViewModel>
@{
    ViewData["Title"] = "Pages";
    var pagePermissions = ViewBag.PagePermissions as Dictionary<string, List<string>>;
    var hasCreatePermission = PermissionHelper.HasPermission(pagePermissions, "Page", "Create");
    var hasEditPermission = PermissionHelper.HasPermission(pagePermissions, "Page", "Update");
    var hasDetailsPermission = PermissionHelper.HasPermission(pagePermissions, "Page", "Read");
    var hasDeletePermission = PermissionHelper.HasPermission(pagePermissions, "Page", "Delete");
}

 <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-6">
                        <h5 style="margin-top: 5px;">@ViewBag.TblTitle</h5>
                    </div>
                    <div class="col-6"style="text-align: end;">
                            
                             @if (hasCreatePermission)
                        {
                            <button type="button" class="btn btn-info add-new">Add New</button>
                        }
                    </div>
                </div>
               
               
            </div>
            <div class="card-body">
                <table class="GirdView table">
                  
                </table>
            </div>
        </div>

@section Scripts{
    <script>

$(document).ready(function () 
{
    let globalId;
    var table;
    function DataTable() {
       // $("#cover-spin").show();
       table = GenricFunctions.bindDatatable(
            '.GirdView', '/Page/ApiGetAll',
            [
                { data: "id", title: "Id", autoWidth: true, name: "Id", searchable: false, orderable: true },
                { data: "pageName", title: "Page Name", autoWidth: true, name: "PageName", orderable: true },
                { data: "pageURL", title: "Page URL", autoWidth: true, orderable: false },
                { data: "iconCss", title: "Icon CSS", autoWidth: true, orderable: false },
                { data: "attr_CSS", title: "Attr CSS", autoWidth: true, orderable: false }
                // { data: "attr_CSS1", title: "Attr CSS1", autoWidth: true, orderable: false },
                // { data: "attr_CSS2", title: "Attr CSS2", autoWidth: true, orderable: false },
                // { data: "attr_CSS3", title: "Attr CSS3", autoWidth: true, orderable: false },
                // { data: "attr_CSS4", title: "Attr CSS4", autoWidth: true, orderable: false }
            ],
            "@hasDetailsPermission" == "True",
            "@hasEditPermission" == "True",
            "@hasDeletePermission" == "True"
        );
        //$("#cover-spin").hide();
        applyTranslations();
    }

DataTable();

$('#saveChanges').on('click', function () { 
     var action = 'update';
        var formDataArray = $('#recordForm').serializeArray();
        var formDataObject = {};
        $.each(formDataArray, function (index, field) {
            formDataObject[field.name] = field.value;
        });
        var dataToSend = {
            id: globalId,
            DTO: formDataObject
        };
        console.log("recordForm: ", JSON.stringify(dataToSend));
        $.ajax({
            url: location.origin + '/Page/ApiUpdate',
            type: 'POST',
            data: dataToSend,
            success: function () {
                $('#recordModal').modal('hide');
                table.ajax.reload();
                  Alerts.showSuccessMessage(action);
            },
            error: function (xhr, status, error) {
                   Alerts.showErrorMessage(action);
                console.error("Error: ", status, error);
            }
        });
    });

$('#saveNew').on('click', function () {
    var action = 'add';
        var formDataArray = $('#recordForm').serializeArray();
        var formDataObject = {};
        $.each(formDataArray, function (index, field) {
            formDataObject[field.name] = field.value;
        });

            $.ajax({
            type: 'POST',
            url: location.origin + '/Page/ApiAdd',
            data: {DTO:formDataObject},
            success: function () {
                $('#recordModal').modal('hide');
                table.ajax.reload();
                  Alerts.showSuccessMessage(action);
            },
            error: function (xhr, status, error) {
                  console.error("Error: ", status, error);
                   Alerts.showErrorMessage(action);
            }
        });
        
  });

$(document).on('click', '.view-btn', function () {
    var id = $(this).data('id');
    globalId= id;
    GenricFunctions.loadRecordData('view', id,'/Page/ApiGetById');
});

$(document).on('click', '.add-new', function () {
    var id = 0;
    globalId=0;
    GenricFunctions.loadRecordData('add', id,'/Page/ApiGetById');
});

$(document).on('click', '.edit-btn', function () {
    var id = $(this).data('id');
    globalId = id;
    GenricFunctions.loadRecordData('edit', id,'/Page/ApiGetById');
});

$(document).on('click', '.delete-btn', function () {
    var id = $(this).data('id');
    GenricFunctions.confirmDelete('/Page/ApiDelete',id,table);
});
 
});
 </script>
}